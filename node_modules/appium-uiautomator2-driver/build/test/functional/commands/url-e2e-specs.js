'use strict';

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _desired = require('../desired');

var _helpersSession = require('../helpers/session');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

var driver = undefined;
var caps = _Object$assign({}, _desired.BROWSER_CAPS);

describe('setUrl @skip-ci', function () {
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          if (process.env.TESTOBJECT_E2E_TESTS) {
            this.skip();
          }
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap((0, _helpersSession.initDriver)(caps));

        case 3:
          driver = context$2$0.sent;

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          if (!driver) {
            context$2$0.next = 3;
            break;
          }

          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.quit());

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should be able to start a data uri via setUrl', function callee$1$0() {
    var btn, el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          if (!(caps.browserName === 'Chrome')) {
            context$2$0.next = 16;
            break;
          }

          context$2$0.prev = 1;
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.elementById('com.android.chrome:id/terms_accept'));

        case 4:
          btn = context$2$0.sent;
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(btn.click());

        case 7:
          context$2$0.next = 9;
          return _regeneratorRuntime.awrap(driver.elementById('com.android.chrome:id/negative_button'));

        case 9:
          btn = context$2$0.sent;
          context$2$0.next = 12;
          return _regeneratorRuntime.awrap(btn.click());

        case 12:
          context$2$0.next = 16;
          break;

        case 14:
          context$2$0.prev = 14;
          context$2$0.t0 = context$2$0['catch'](1);

        case 16:
          context$2$0.next = 18;
          return _regeneratorRuntime.awrap(driver.get('http://saucelabs.com'));

        case 18:
          context$2$0.next = 20;
          return _regeneratorRuntime.awrap(driver.waitForElementByTagName("title"));

        case 20:
          context$2$0.next = 22;
          return _regeneratorRuntime.awrap(driver.elementByTagName("title"));

        case 22:
          el = context$2$0.sent;
          context$2$0.next = 25;
          return _regeneratorRuntime.awrap(el.getAttribute("innerHTML").should.eventually.include('Sauce Labs'));

        case 25:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this, [[1, 14]]);
  });
});

// on some chrome systems, we always get the terms and conditions page
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy91cmwtZTJlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O29CQUFpQixNQUFNOzs7OzhCQUNJLGtCQUFrQjs7Ozt1QkFDaEIsWUFBWTs7OEJBQ2Qsb0JBQW9COztBQUUvQyxrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBRXpCLElBQUksTUFBTSxZQUFBLENBQUM7QUFDWCxJQUFJLElBQUksR0FBRyxlQUFjLEVBQUUsd0JBQWUsQ0FBQzs7QUFFM0MsUUFBUSxDQUFDLGlCQUFpQixFQUFFLFlBQVk7QUFDdEMsUUFBTSxDQUFDOzs7O0FBQ0wsY0FBSSxPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixFQUFFO0FBQ3BDLGdCQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7V0FDYjs7MkNBQ2MsZ0NBQVcsSUFBSSxDQUFDOzs7QUFBL0IsZ0JBQU07Ozs7Ozs7R0FDUCxDQUFDLENBQUM7QUFDSCxPQUFLLENBQUM7Ozs7ZUFDQSxNQUFNOzs7Ozs7MkNBQ0YsTUFBTSxDQUFDLElBQUksRUFBRTs7Ozs7OztHQUV0QixDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLCtDQUErQyxFQUFFO1FBSTFDLEdBQUcsRUFXUCxFQUFFOzs7O2dCQWRGLElBQUksQ0FBQyxXQUFXLEtBQUssUUFBUSxDQUFBOzs7Ozs7OzJDQUdiLE1BQU0sQ0FBQyxXQUFXLENBQUMsb0NBQW9DLENBQUM7OztBQUFwRSxhQUFHOzsyQ0FDRCxHQUFHLENBQUMsS0FBSyxFQUFFOzs7OzJDQUVMLE1BQU0sQ0FBQyxXQUFXLENBQUMsdUNBQXVDLENBQUM7OztBQUF2RSxhQUFHOzsyQ0FDRyxHQUFHLENBQUMsS0FBSyxFQUFFOzs7Ozs7Ozs7Ozs7MkNBSWYsTUFBTSxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQzs7OzsyQ0FFbEMsTUFBTSxDQUFDLHVCQUF1QixDQUFDLE9BQU8sQ0FBQzs7OzsyQ0FDOUIsTUFBTSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQzs7O0FBQTNDLFlBQUU7OzJDQUNBLEVBQUUsQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDOzs7Ozs7O0dBQzNFLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2Z1bmN0aW9uYWwvY29tbWFuZHMvdXJsLWUyZS1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlBc1Byb21pc2VkIGZyb20gJ2NoYWktYXMtcHJvbWlzZWQnO1xuaW1wb3J0IHsgQlJPV1NFUl9DQVBTIH0gZnJvbSAnLi4vZGVzaXJlZCc7XG5pbXBvcnQgeyBpbml0RHJpdmVyIH0gZnJvbSAnLi4vaGVscGVycy9zZXNzaW9uJztcblxuY2hhaS5zaG91bGQoKTtcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcblxubGV0IGRyaXZlcjtcbmxldCBjYXBzID0gT2JqZWN0LmFzc2lnbih7fSwgQlJPV1NFUl9DQVBTKTtcblxuZGVzY3JpYmUoJ3NldFVybCBAc2tpcC1jaScsIGZ1bmN0aW9uICgpIHtcbiAgYmVmb3JlKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuVEVTVE9CSkVDVF9FMkVfVEVTVFMpIHtcbiAgICAgIHRoaXMuc2tpcCgpO1xuICAgIH1cbiAgICBkcml2ZXIgPSBhd2FpdCBpbml0RHJpdmVyKGNhcHMpO1xuICB9KTtcbiAgYWZ0ZXIoYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGlmIChkcml2ZXIpIHtcbiAgICAgIGF3YWl0IGRyaXZlci5xdWl0KCk7XG4gICAgfVxuICB9KTtcblxuICBpdCgnc2hvdWxkIGJlIGFibGUgdG8gc3RhcnQgYSBkYXRhIHVyaSB2aWEgc2V0VXJsJywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGlmIChjYXBzLmJyb3dzZXJOYW1lID09PSAnQ2hyb21lJykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gb24gc29tZSBjaHJvbWUgc3lzdGVtcywgd2UgYWx3YXlzIGdldCB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgcGFnZVxuICAgICAgICBsZXQgYnRuID0gYXdhaXQgZHJpdmVyLmVsZW1lbnRCeUlkKCdjb20uYW5kcm9pZC5jaHJvbWU6aWQvdGVybXNfYWNjZXB0Jyk7XG4gICAgICAgIGF3YWl0IGJ0bi5jbGljaygpO1xuXG4gICAgICAgIGJ0biA9IGF3YWl0IGRyaXZlci5lbGVtZW50QnlJZCgnY29tLmFuZHJvaWQuY2hyb21lOmlkL25lZ2F0aXZlX2J1dHRvbicpO1xuICAgICAgICBhd2FpdCBidG4uY2xpY2soKTtcbiAgICAgIH0gY2F0Y2ggKGlnbikge31cbiAgICB9XG5cbiAgICBhd2FpdCBkcml2ZXIuZ2V0KCdodHRwOi8vc2F1Y2VsYWJzLmNvbScpO1xuXG4gICAgYXdhaXQgZHJpdmVyLndhaXRGb3JFbGVtZW50QnlUYWdOYW1lKFwidGl0bGVcIik7XG4gICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmVsZW1lbnRCeVRhZ05hbWUoXCJ0aXRsZVwiKTtcbiAgICBhd2FpdCBlbC5nZXRBdHRyaWJ1dGUoXCJpbm5lckhUTUxcIikuc2hvdWxkLmV2ZW50dWFsbHkuaW5jbHVkZSgnU2F1Y2UgTGFicycpO1xuICB9KTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLiJ9
