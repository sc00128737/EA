'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _pngjs = require('pngjs');

var _desired = require('../../desired');

var _helpersSession = require('../../helpers/session');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

var driver = undefined;

describe('testViewportCommands', function () {
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersSession.initDriver)(_desired.SCROLL_CAPS));

        case 2:
          driver = context$2$0.sent;

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          if (!driver) {
            context$2$0.next = 3;
            break;
          }

          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.quit());

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should get device pixel ratio, status bar height, and viewport rect', function callee$1$0() {
    var _ref, viewportRect, statBarHeight, pixelRatio;

    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.sessionCapabilities());

        case 2:
          _ref = context$2$0.sent;
          viewportRect = _ref.viewportRect;
          statBarHeight = _ref.statBarHeight;
          pixelRatio = _ref.pixelRatio;

          pixelRatio.should.exist;
          pixelRatio.should.not.equal(0);
          statBarHeight.should.exist;
          statBarHeight.should.not.equal(0);
          viewportRect.should.exist;
          viewportRect.left.should.exist;
          viewportRect.top.should.exist;
          viewportRect.width.should.exist;
          viewportRect.height.should.exist;

        case 15:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should get scrollable element', function callee$1$0() {
    var scrollableEl;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByXPath('//*[@scrollable="true"]'));

        case 2:
          scrollableEl = context$2$0.sent;

          scrollableEl.should.exist;

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should get content size from scrollable element found as uiobject', function callee$1$0() {
    var scrollableEl, contentSize;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByXPath('//*[@scrollable="true"]'));

        case 2:
          scrollableEl = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(scrollableEl.getAttribute("contentSize"));

        case 5:
          contentSize = context$2$0.sent;

          contentSize.should.exist;
          JSON.parse(contentSize).scrollableOffset.should.exist;

        case 8:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should get content size from scrollable element found as uiobject2', function callee$1$0() {
    var scrollableEl, contentSize;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByXPath('//android.widget.ScrollView'));

        case 2:
          scrollableEl = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(scrollableEl.getAttribute("contentSize"));

        case 5:
          contentSize = context$2$0.sent;

          contentSize.should.exist;
          JSON.parse(contentSize).scrollableOffset.should.exist;

        case 8:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should get first element from scrollable element', function callee$1$0() {
    var scrollableEl, element;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByXPath('//*[@scrollable="true"]'));

        case 2:
          scrollableEl = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(scrollableEl.elementByXPath('/*[@firstVisible="true"]'));

        case 5:
          element = context$2$0.sent;

          element.should.exist;

        case 7:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should get a cropped screenshot of the viewport without statusbar', function callee$1$0() {
    var _ref2, viewportRect, statBarHeight, fullScreen, viewScreen, fullB64, viewB64, fullImg, viewImg;

    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.sessionCapabilities());

        case 2:
          _ref2 = context$2$0.sent;
          viewportRect = _ref2.viewportRect;
          statBarHeight = _ref2.statBarHeight;
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.takeScreenshot());

        case 7:
          fullScreen = context$2$0.sent;
          context$2$0.next = 10;
          return _regeneratorRuntime.awrap(driver.execute("mobile: viewportScreenshot"));

        case 10:
          viewScreen = context$2$0.sent;
          fullB64 = new Buffer(fullScreen, 'base64');
          viewB64 = new Buffer(viewScreen, 'base64');
          fullImg = new _pngjs.PNG({ filterType: 4 });
          context$2$0.next = 16;
          return _regeneratorRuntime.awrap(_bluebird2['default'].promisify(fullImg.parse).call(fullImg, fullB64));

        case 16:
          viewImg = new _pngjs.PNG({ filterType: 4 });
          context$2$0.next = 19;
          return _regeneratorRuntime.awrap(_bluebird2['default'].promisify(viewImg.parse).call(viewImg, viewB64));

        case 19:
          viewportRect.top.should.eql(statBarHeight);
          viewImg.height.should.eql(viewportRect.height);
          viewImg.width.should.eql(fullImg.width);
          fullImg.height.should.be.above(viewImg.height);

        case 23:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
